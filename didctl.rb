# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Didctl < Formula
  desc "Reference client implementation for the 'bryk' DID method. The platform allows
entities to fully manage Decentralized Identifiers as described on the version
v1.0 of the specification.
"
  homepage "https://github.com/aidtechnology/did-method"
  version "0.9.0"

  on_macos do
    url "https://github.com/aidtechnology/did-method/releases/download/v0.9.0/didctl_0.9.0_darwin_amd64.tar.gz"
    sha256 "36da530418da2ba1a3e6c3b604298b6aa4a14303010f355ae432cce46ff6ac5e"

    def install
      bin.install "didctl"
      output = Utils.popen_read("#{bin}/didctl completion bash")
      (bash_completion/"didctl").write output
      output = Utils.popen_read("#{bin}/didctl completion zsh")
      (zsh_completion/"_didctl").write output
      prefix.install_metafiles
    end

    if Hardware::CPU.arm?
      def caveats
        <<~EOS
          The darwin_arm64 architecture is not supported for the Didctl
          formula at this time. The darwin_amd64 binary may work in compatibility
          mode, but it might not be fully supported.
        EOS
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/aidtechnology/did-method/releases/download/v0.9.0/didctl_0.9.0_linux_amd64.tar.gz"
      sha256 "333289799ecfa3f70a68fee840df26ecb7e0e93354be519361978d661c2a6324"

      def install
        bin.install "didctl"
        output = Utils.popen_read("#{bin}/didctl completion bash")
        (bash_completion/"didctl").write output
        output = Utils.popen_read("#{bin}/didctl completion zsh")
        (zsh_completion/"_didctl").write output
        prefix.install_metafiles
      end
    end
  end

  test do
    system "#{bin}/didctl version"
  end
end
